version: '3.2'

services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: 'backend'
    entrypoint: ['/usr/src/tradelytics/entrypoint.sh']
    volumes:
      - './backend:/usr/src/tradelytics'
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=app.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@db:5432/app_test
      - SECRET_KEY=change_this_to_some_random_key
    depends_on:
      - db

  data:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: 'data'
    entrypoint: ['/usr/src/tradelytics/entrypoint-data.sh']
    volumes:
      - './backend:/usr/src/tradelytics'
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=app.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_dev
    depends_on:
      - db

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: 'frontend'
    volumes:
      - './frontend:/usr/src/tradelytics'
      - '/usr/src/tradelytics/node_modules'
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_SERVICE_URL=http://localhost:5001
    depends_on:
      - backend

volumes:
  pgdata: 
    external: true